---
import ReadingIndicator from "@/components/svelte/ReadingIndicator.svelte";
import TOC from "@/components/TOC.astro";
import Layout from "@/layouts/Layout.astro";
import { getCollection } from "astro:content";
import { format } from "date-fns";
import { ArrowLeftIcon } from "lucide-svelte";

export async function getStaticPaths() {
  const notesEntries = await getCollection("notes");

  return notesEntries.map((item) => ({
    params: {
      slug: item.slug,
    },
    props: {
      item,
    },
  }));
}

const { item } = Astro.props;
const { Content, remarkPluginFrontmatter, headings } = await item.render();
---

<ReadingIndicator client:only="svelte" />
<Layout
  title={item.data.title}
  description={item.data.description}
  url={`https://ekel.dev/notes/${item.slug}`}
>
  <div class="w-full slide-enter-content text-justify">
    <a href="/notes" class="flex w-fit items-center justify-center">
      <button
        type="button"
        aria-label="back to notes"
        class="flex h-8 w-8 items-center justify-center cursor-pointer rounded-full bg-monochrome-2"
      >
        <ArrowLeftIcon className="text-center" />
      </button>
    </a>
    <h1 class="mt-4">{item.data.title}</h1>
    <div class="flex w-full items-center space-x-2">
      <div class="rounded-full!">
        <img
          src="https://avatars.githubusercontent.com/u/77146709?v=4"
          alt="haikelz"
          class="my-0! h-7 w-7 rounded-full! py-0!"
        />
      </div>
      <span class="font-semibold"
        >{item.data.author}, {remarkPluginFrontmatter.minutesRead} / {
          format(item.data.created_at, "LLLL d, yyyy")
        }
      </span>
    </div>
    <p class="arabic-font text-right text-xl font-semibold">
      بِسْمِ اللَّهِ الرَّحْمَٰنِ الرَّحِيمِ
    </p>
    <Content />
  </div>
  {headings && headings.length > 0 ? <TOC headings={headings} /> : null}
</Layout>
